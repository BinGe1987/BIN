package com.kwaijian.facility.UI.Login;

import android.os.Bundle;
import android.text.TextUtils;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.EditText;
import android.widget.TextView;

import com.kwaijian.facility.DataCenter.BaseClasses.HTData;
import com.kwaijian.facility.DataCenter.Config.Operations;
import com.kwaijian.facility.DataCenter.DataCenter;
import com.kwaijian.facility.DataCenter.User.UserData;
import com.kwaijian.facility.OldSource.http.HttpConst;
import com.kwaijian.facility.UI.BaseClass.Activity.HTActivity;
import com.kwaijian.facility.UI.BaseClass.Views.HTProgress;
import com.kwaijian.facility.R;
import com.kwaijian.facility.OldSource.tools.LogUtils;
import com.kwaijian.facility.OldSource.tools.ToastUtils;
import com.kwaijian.facility.OldSource.tools.Utils;
import com.kwaijian.facility.Utils.Localize.Saver;
import com.kwaijian.facility.Utils.UI.ActivityUtils;


import java.util.HashMap;

public class LoginActivity extends HTActivity implements OnClickListener {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_login);

        EditText userView = (EditText) findViewById(R.id.user);
        EditText pwdView = (EditText) findViewById(R.id.pwd);
        userView.setText(Saver.getString("username", ""));
        pwdView.setText(Saver.getString("password", ""));

        findViewById(R.id.login).setOnClickListener(this);
    }

    @Override
    public void onClick(View v) {
        TextView userView = (TextView) findViewById(R.id.user);
        TextView pwdView = (TextView) findViewById(R.id.pwd);

        if (TextUtils.isEmpty(userView.getText())) {
            ToastUtils.show(this, "请输入用户名");
            return;
        }
        if (TextUtils.isEmpty(pwdView.getText())) {
            ToastUtils.show(this, "请输入密码");
            return;
        }
        Saver.set("username", userView.getText());
        Saver.set("password", pwdView.getText());

        if (Utils.isNetWork(this)) {
            login(userView.getText().toString(), pwdView.getText().toString());
        } else {
            ToastUtils.show(this, "网络错误");
        }
    }

    public void login(final String user, final String password) {
        HTProgress.create(this, "LoginLoading").setType(HTProgress.TYPE.LOADING).show();
        DataCenter.get().perform(Operations.Login.LoginWithPwd, new HashMap<String, String>() {{
            put("account", user);
            put("password", password);
        }}, new DataCenter.Callback() {
            @Override
            public void onCallback(String operation, HTData data) {
                LogUtils.d("operation:" + operation);
                UserData userData = (UserData) data;
                if (userData.isLogin()) {
                    ActivityUtils.dismissActivity(LoginActivity.this);
                } else {
                    TextView info = (TextView) findViewById(R.id.errorInfo);
                    info.setText("errCode:"+userData.errCode()+", "+userData.errInfo());
                }
                HTProgress.dismissAll();
            }
        });
    }

//    @Override
//    public void callback(String data) {
//        LogUtils.d(data);
////		CustomDialog.dismissDialog();
//        SystemClock.sleep(1000);
//        if (data == null) {
//            mHandler.post(new Runnable() {
//                public void run() {
//                    ToastUtils.show(getBaseContext(), "请求服务器失败");
//                }
//            });
//            return;
//        }
//        try {
//            JSONObject json = new JSONObject(data);
//
//            if (httpFlag.equals(HttpConst.Request.LOGIN)) {
//                if (json.get("errCode").equals(0)) {
//                    TextView userView = (TextView) findViewById(R.id.user);
//                    TextView pwdView = (TextView) findViewById(R.id.pwd);
//                    Saver.saveLogin(Saver.getIntance(), userView.getText().toString(), pwdView.getText().toString());
//
////					 Data.getInstence().initUser(new JSONObject(json.getString("user")));
//                    getServiceList();
//                } else {
//                    final String msg = (String) json.get("errMsg");
//                    mHandler.post(new Runnable() {
//                        public void run() {
//                            ToastUtils.show(LoginActivity.this, msg);
//                        }
//                    });
//                }
//            } else if (httpFlag.equals(HttpConst.Request.GET_SERVICE_LIST)) {
//                final String msg = (String) json.get("errMsg");
//                if (json.get("errCode").equals(0)) {
//                    Data.getInstence().getOrders(json.getJSONArray("list_service"));
//                    mHandler.post(new Runnable() {
//                        public void run() {
////							startActivityWithAnimationHorizontalIn(MainActivity.class);
////							ActivityUtils.pushActivity(LoginActivity.this, MainActivity.class);
////                            Intent intent = new Intent(LoginActivity.this, MainActivity.class);
////                            startActivity(intent);
////							finish();
////                            overridePendingTransition(0,0);
//                            HTProgress.dismissAll();
//                            ActivityUtils.pullActivity(LoginActivity.this);
//                        }
//                    });
//                } else {
//
//                    mHandler.post(new Runnable() {
//                        public void run() {
//                            HTProgress.dismissAll();
//                            ToastUtils.show(LoginActivity.this, msg);
//                        }
//                    });
//                }
//            }
//
//        } catch (JSONException e) {
//            e.printStackTrace();
//        }
//    }

    public void getServiceList() {
        new Thread(new Runnable() {
            @Override
            public void run() {
//                HttpRequest http = new HttpRequest(LoginActivity.this);
//                http.postRequest(HttpConst.Request.GET_SERVICE_LIST);
            }
        }).start();
    }
}
