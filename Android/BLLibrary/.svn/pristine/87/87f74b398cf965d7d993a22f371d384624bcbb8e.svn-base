apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.3"
    defaultConfig {
        applicationId "com.kwaijian.facility"
        minSdkVersion 16
        targetSdkVersion 25
        versionCode getSvnRevision()
        versionName "2.0." + versionCode
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        facility {
            keyAlias 'bin'
            keyPassword 'bin720097'
            storeFile file('./bin.keystore')
            storePassword 'bin720097'
        }
        debug {
            keyAlias 'bin'
            keyPassword 'bin720097'
            storeFile file('./bin.keystore')
            storePassword 'bin720097'
        }
    }

    useLibrary 'org.apache.http.legacy'
    aaptOptions {
        cruncherEnabled = false
        useNewCruncher = false
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
//    useLibrary 'org.apache.http.legacy'
    android.applicationVariants.all { variant ->
        variant.outputs.each { output ->
            output.outputFile = new File(output.outputFile.parent, "Facility" + "_" + buildType.name + "_v" +
                    defaultConfig.versionName + ".apk");
        }
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
    lintOptions {
        disable "ResourceType"
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support.constraint:constraint-layout:1.0.0-alpha7'
    testCompile 'junit:junit:4.12'


//    compile 'org.apache.httpcomponents:httpcore:4.3.2'
//    compile 'org.apache.httpcomponents:httpmime:4.3.5'
    compile 'com.facebook.fresco:fresco:1.5.0'

    compile 'cn.finalteam:galleryfinal:1.4.8.7'
    compile 'com.squareup.picasso:picasso:2.5.2'

    compile 'com.didikee:permissionsHelper:0.1.8'
}

def getSvnRevision() {
    new ByteArrayOutputStream().withStream { os ->
        def result = exec {
            executable = 'svn'
            args = ['info']
            standardOutput = os
        }
        def outputAsString = os.toString()
        def matchLastChangedRev = outputAsString =~ /Last Changed Rev: (\d+)/

        ext.svnRev = "${matchLastChangedRev[0][1]}".toInteger()
    }
    return svnRev
}